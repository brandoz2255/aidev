events {}

http {
    # Map allowed origins dynamically
    map $http_origin $cors_origin {
        default "";
        "http://localhost:9000" "$http_origin";
        "http://localhost:8000" "$http_origin";
        "http://localhost:3000" "$http_origin";
        "http://localhost:3001" "$http_origin";
        "http://127.0.0.1:9000" "$http_origin";
        "http://127.0.0.1:8080" "$http_origin";
        "http://127.0.0.1:3000" "$http_origin";
        "http://127.0.0.1:3001" "$http_origin";
        "http://localhost:5173" "$http_origin"; # Vite or dev server support
    }

    server {
        listen 80;

        # Global CORS headers (applied everywhere)
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # ==== Handle frontend ====
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==== Handle FastAPI backend ====
        location /api/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                return 204;
            }

            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==== Serve audio files from temp directory ====
        location /audio/ {
            alias /tmp/;
            add_header Content-Type application/octet-stream;
            autoindex on;
        }
    }
}
